Algoritimo de busca de caminho.
Usado para achar o menor caminho entre dois pontos com base nas rotas possiveis, desconsiderando os caminhos inviaveis.
Para a nossa aplicação o algoritimo será aplicado em uma malha quadriculada, onde o movimento só é possível nas direções frente, trás, esquerda e direita.
Funciona da seguinte maneira:

    1. Cada celula (nó, casa ou divisão) terá 3 valores atribuidos:
        - deslocamento a partir do ponto inicial até a casa atual (g).
        - custo estimado para alcançar a celula objetivo (h).
        - custo total, a soma dos dois custos (f = g+h).
    2. A estimativa do custo até a celula objetivo (h) será dada por:
        - soma da distância entre a coluna atual até a coluna da celula destino e a distância entre a linha atual ate a linha da celula destino:
            a. h = abs( coluna - destino[coluna]) + abs( linha - destino[linha])
            b. essa equação é usada para movimentos abenas na vertical e horizontal
        - para admitir movimentos na diagonal a formula é:
            a. h = D*(dx+dy) + (D2 - 2*D) * min(dx,dy). onde:
            dx = abs( coluna - destino[coluna]).
            dy = abs( linha - destino[linha])
            D = 1. custo do movimento ortogonal (vertical e horizontal)
            D2 = raiz(2). custo do movimento diagonal
    3. O custo total da primeira celula é calculado
    4. Caminhar, a partir da celula inicial, explorando proximos caminhos.
    5. para cada possibilidade de caminho:
        - verificar se o caminho é possível (se não é uma parede ou está fora do mapa).
        - Se o caminho for possível:
            a. calcular o custo total do caminho.
            b. se menor que o anterior adiciona-lo como caminho a ser seguido.
            c. escolher o caminho a ser seguido:
                - priorizar o que tem meno custo total.
                - em caso de memso custo total, priorizar o com menor custo estimado para alcançar o objetivo.